services:
  database:
    container_name: acs-website-database
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: acs-website
    ports:
      - '5432:5432'
    volumes:
      - ./databasepg:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d acs-website']
      interval: 10s
      timeout: 5s
      retries: 5

  servers:
    container_name: acs-website-server
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    image: acs-website-server:development
    ports:
      - '${PORT}:${PORT}'
    env_file:
      - .env
    environment:
      PORT: ${PORT}
      DATABASE_URL: postgres://admin:admin@acs-website-database:5432/acs-website
      NODE_ENV: development
    depends_on:
      database:
        condition: service_healthy

  # servers-prod:
  #   container_name: acs-website-server-prod
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: production
  #   image: acs-website-server:production
  #   ports:
  #     - '${PORT}:${PORT}'
  #   env_file:
  #     - .env
  #   environment:
  #     PORT: ${PORT}
  #     DATABASE_URL: postgres://admin:admin@acs-website-database:5432/acs-website
  #     NODE_ENV: production
  #   depends_on:
  #     database:
  #       condition: service_healthy
